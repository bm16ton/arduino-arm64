/* 
// This file is subject to the terms and conditions defined in
// file 'LICENSE.md', which is part of this source code package.
*/

/*

  analogWrite is an Arduino function that outputs a rectangular
  wave signal (commonly referred to as a square wave) on pins.

  On the Apollo3 this signal is generated by a hardware peripheral
  which is only available on certain pads:

  12 25 13 26 18
  27 19 28  5 29
   6 30 22 31 23
  32 42  4 43  7
  44 24 45 33 46
  39 47 35 48 37
  49 11

  (note: this refers to Apollo3 pads which may not correlate directly
    to the pin names on the board)

  By default analogWrite takes an 8-bit value to set the level - this
  means that there are 256 different levels (0 to 255)

  It is possible to change the resolution used by subsequent calls to 
  analogWrite by passing a number of bits to the  analogWriteResolution 
  function (up to 16)

  reference: https://www.arduino.cc/reference/en/language/functions/analog-io/analogwrite/

*/

void setup() {
  Serial.begin(115200);
  Serial.println("Apollo3 - analogWrite");

  // pinMode is not needed for PWM output

  analogWrite(LED_BUILTIN, 127);    // 50% duty cycle w/ 8-bit resolution
  analogWriteResolution(16);        // new range is 0 to 65535
  analogWrite(LED_BUILTIN, 32767);  // 50% duty cycle w/ 16-bit resolution
                                    // note: changing resolution does not
                                    //       affect previous calls to analogWrite

  analogWriteResolution(8);         // sets the resolution of analogWrite output
                                    //    - maximum: 16 bits
                                    //    - default:  8 bits
                                    //    - minimum:  1 bit
}

void loop() {
  // the goal is to make the built-in LED "breathe" by fading up / down

  static uint8_t val = 0;
  static     int dir = 1;
  
  analogWrite(LED_BUILTIN, val);
  val += dir;
  if((val == 0x0000) || (val == 255)){
    dir *= -1;
  }
  
  delay(1);
}
